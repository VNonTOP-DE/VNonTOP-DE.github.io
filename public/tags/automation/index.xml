<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Automation on Nguyen Hoang Tuan - Data Engineer</title>
    <link>http://localhost:1313/tags/automation/</link>
    <description>Recent content in Automation on Nguyen Hoang Tuan - Data Engineer</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 10 Feb 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/automation/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Automated Pixiv Artwork Scraper</title>
      <link>http://localhost:1313/post/pixiv-scraper/</link>
      <pubDate>Mon, 10 Feb 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/pixiv-scraper/</guid>
      <description>&lt;h2 id=&#34;project-overview&#34;&gt;&#xD;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#project-overview&#34;&gt;&lt;/a&gt;&#xD;&#xA;Project Overview&#xD;&#xA;&lt;/h2&gt;&lt;p&gt;This project implements an automated artwork scraping system for Pixiv, combining Selenium for dynamic content rendering and Scrapy for efficient data extraction. The system intelligently navigates through artwork recommendations and downloads images while respecting the platform&amp;rsquo;s rate limits.&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Goal:&lt;/strong&gt; Create a robust automated system to collect and archive high-quality artwork while handling dynamic content loading and maintaining platform-friendly access patterns.&lt;/p&gt;&#xA;&lt;h2 id=&#34;technologies-used&#34;&gt;&#xD;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#technologies-used&#34;&gt;&lt;/a&gt;&#xD;&#xA;Technologies Used&#xD;&#xA;&lt;/h2&gt;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Web Automation:&lt;/strong&gt; Selenium WebDriver&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Scraping Framework:&lt;/strong&gt; Scrapy&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Browser:&lt;/strong&gt; Chrome (Headless mode)&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Programming:&lt;/strong&gt; Python&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Logging:&lt;/strong&gt; Custom logging system&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;key-features&#34;&gt;&#xD;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#key-features&#34;&gt;&lt;/a&gt;&#xD;&#xA;Key Features&#xD;&#xA;&lt;/h2&gt;&lt;ul&gt;&#xA;&lt;li&gt;✅ Automated navigation through artwork recommendations&lt;/li&gt;&#xA;&lt;li&gt;✅ Smart image format detection (JPG/PNG)&lt;/li&gt;&#xA;&lt;li&gt;✅ Robust retry mechanism for failed downloads&lt;/li&gt;&#xA;&lt;li&gt;✅ Rate limiting and delay implementation&lt;/li&gt;&#xA;&lt;li&gt;✅ Comprehensive error handling and logging&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;implementation-details&#34;&gt;&#xD;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#implementation-details&#34;&gt;&lt;/a&gt;&#xD;&#xA;Implementation Details&#xD;&#xA;&lt;/h2&gt;&lt;h3 id=&#34;scraping-architecture&#34;&gt;&#xD;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#scraping-architecture&#34;&gt;&lt;/a&gt;&#xD;&#xA;Scraping Architecture&#xD;&#xA;&lt;/h3&gt;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Hybrid Approach:&lt;/strong&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Selenium for JavaScript rendering&lt;/li&gt;&#xA;&lt;li&gt;Scrapy for efficient data extraction&lt;/li&gt;&#xA;&lt;li&gt;Custom middleware integration&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;download-management&#34;&gt;&#xD;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#download-management&#34;&gt;&lt;/a&gt;&#xD;&#xA;Download Management&#xD;&#xA;&lt;/h3&gt;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Smart Download System:&lt;/strong&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Multiple format attempt (JPG/PNG)&lt;/li&gt;&#xA;&lt;li&gt;Content-type verification&lt;/li&gt;&#xA;&lt;li&gt;Partial download detection&lt;/li&gt;&#xA;&lt;li&gt;Automated retry mechanism&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;error-handling&#34;&gt;&#xD;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#error-handling&#34;&gt;&lt;/a&gt;&#xD;&#xA;Error Handling&#xD;&#xA;&lt;/h3&gt;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Robust Recovery:&lt;/strong&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Multiple retry attempts&lt;/li&gt;&#xA;&lt;li&gt;Format fallback system&lt;/li&gt;&#xA;&lt;li&gt;Comprehensive logging&lt;/li&gt;&#xA;&lt;li&gt;Connection error handling&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;results--impact&#34;&gt;&#xD;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#results--impact&#34;&gt;&lt;/a&gt;&#xD;&#xA;Results &amp;amp; Impact&#xD;&#xA;&lt;/h2&gt;&lt;h3 id=&#34;key-achievements&#34;&gt;&#xD;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#key-achievements&#34;&gt;&lt;/a&gt;&#xD;&#xA;Key Achievements&#xD;&#xA;&lt;/h3&gt;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;Performance:&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
